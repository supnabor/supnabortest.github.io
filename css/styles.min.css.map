{"version":3,"sources":["_fonts.scss","_reset.scss","_common.scss","../node_modules/include-media/dist/_include-media.scss","blocks/block-header.scss","blocks/block-hero.scss","blocks/block-portfolio.scss","blocks/block-footer.scss","blocks/block-contact.scss"],"names":[],"mappings":"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","file":"styles.min.css","sourcesContent":["@import url(\"https://fonts.googleapis.com/css2?family=Work+Sans:wght@400;500&display=swap\");\n","html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n","body {\n  margin: 0;\n  font-family: \"Work Sans\", sans-serif;\n  color: #314584;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 0;\n}\n\np {\n  margin: 0;\n}\n\n.container {\n  width: 100%;\n  max-width: 1200px;\n  padding: 0 15px;\n  margin: 0 auto;\n}\n\n.section-title {\n  text-align: left;\n  font-size: 48px;\n  font-weight: 500;\n  max-width: 393px;\n\n  @include media(\"<=tablet\") {\n    font-size: 44px;\n  }\n  @include media(\"<=420px\") {\n    font-size: 40px;\n  }\n}\n\n//BURGER BUTTON//\n.burger-button {\n  display: none;\n\n  @include media(\"<=420px\") {\n    display: block;\n    position: fixed;\n    top: 26px;\n    right: 20px;\n    z-index: 200;\n  }\n\n  @include media(\"<=420px\") {\n    &.active {\n      position: fixed;\n      top: 30px;\n      right: 30px;\n      z-index: 200;\n    }\n\n    @include media(\"<=420px\") {\n      &.active {\n        top: 30px;\n        right: 20px;\n      }\n    }\n  }\n\n  .line {\n    height: 6px;\n    width: 58px;\n    margin-bottom: 8px;\n    background-color: #314584;\n    transition: all 200ms ease-in-out;\n    opacity: 1;\n\n    @include media(\"<=736px\") {\n      height: 4px;\n      width: 48px;\n    }\n  }\n\n  &.active {\n    .line {\n      background-color: #314584;\n      &.one {\n        transform: rotate(45deg) scale(1.2);\n      }\n      &.two {\n        transform: rotate(-45deg) scale(1.2) translateY(-8px) translateX(8px);\n        @include media(\"<=736px\") {\n          transform: rotate(-45deg) scale(1.2) translateY(-7px) translateX(7px);\n        }\n      }\n      &.three {\n        opacity: 0;\n      }\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n",".header {\n  padding-top: 64px;\n\n  @include media(\"<=1024px\") {\n    padding: 30px 0;\n  }\n}\n\n.header-logo {\n  position: absolute;\n  left: -14%;\n  @include media(\"<=1440px\") {\n    left: -10%;\n  }\n  @include media(\"<=1280px\") {\n    position: relative;\n    left: 0;\n  }\n}\n\n.header-inner {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n}\n\n.header-nav {\n  @include media(\"<=tablet\") {\n    padding: 0 30px;\n  }\n  @include media(\"<=420px\") {\n    display: none;\n\n    &.active {\n      display: flex;\n      position: fixed;\n      height: 100%;\n      width: 100%;\n      left: 0;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      background-color: #fff;\n      z-index: 8;\n      display: flex;\n      flex-direction: column;\n      flex-wrap: nowrap;\n      justify-content: center;\n      align-content: space-between;\n      align-items: center;\n      opacity: 1;\n\n      .header-link {\n        padding: 20px 20px 0;\n        margin-left: 0;\n      }\n    }\n  }\n}\n\n.header-link {\n  font-size: 18px;\n  font-weight: 700;\n  text-align: left;\n  text-decoration: none;\n  color: #314584;\n  margin-right: 46px;\n  transition: all 0.3s linear;\n  @include media(\"<=1024px\") {\n    margin-right: 30px;\n  }\n  @include media(\"<=tablet\") {\n    margin-bottom: 5px;\n    display: inline-block;\n  }\n  @include media(\"<=420px\") {\n    margin-right: 0;\n    opacity: 1;\n    font-size: 24px;\n  }\n}\n\n.header-link:hover {\n  color: #ff3946;\n  opacity: 1;\n}\n\n.header-buttons {\n  display: flex;\n  align-items: center;\n}\n\n.lang {\n  font-size: 18px;\n  font-weight: 500;\n  position: relative;\n  display: inline-block;\n  cursor: pointer;\n  &::after {\n    content: \"\";\n    position: absolute;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n    border-top: 8px solid #314584;\n    bottom: 3px;\n    right: -10px;\n  }\n  @include media(\"<=420px\") {\n    display: none;\n  }\n}\n\n.lang-btn::after {\n  content: \"\";\n}\n\n.lang-content {\n  display: none;\n  position: absolute;\n  background-color: #f9f9f9;\n  width: 80px;\n  a {\n    color: black;\n    padding: 2px 0 2px;\n    text-decoration: none;\n    display: block;\n  }\n}\n\n.lang-content a:hover {\n  background-color: #f1f1f1;\n}\n\n.lang:hover .lang-content {\n  display: block;\n}\n\n.language {\n  @include media(\"<=420px\") {\n    padding-right: 80px;\n    padding-bottom: 8px;\n  }\n}\n\n.language-selector {\n  background-color: transparent;\n  border: none;\n  font-size: 18px;\n  color: #314584;\n  font-weight: 500;\n  cursor: pointer;\n  position: relative;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n}\n\nlabel {\n  position: relative;\n  &::after {\n    content: \"\";\n    position: absolute;\n    border-left: 4px solid transparent;\n    border-right: 4px solid transparent;\n    border-top: 8px solid #314584;\n    bottom: 5px;\n    right: -10px;\n    background-color: #fff;\n  }\n}\n\n.contact-btn {\n  padding: 21px 68px 28px 34px;\n  text-decoration: none;\n  box-shadow: 0 5px 10px rgba(25, 45, 51, 0.15);\n  color: #ff3946;\n  transition: all 0.3s linear;\n  border-radius: 5px;\n  font-size: 18px;\n  font-weight: 500;\n  margin-left: 60px;\n  position: relative;\n  &:hover {\n    box-shadow: 0 5px 15px rgba(25, 45, 51, 0.25);\n  }\n  &::after {\n    content: \"\";\n    position: absolute;\n    right: 26px;\n    width: 30px;\n    height: 19px;\n    background-image: url(../images/arrow.png);\n    @include media(\"<=tablet\") {\n      bottom: 30px;\n    }\n  }\n  @include media(\"<=tablet\") {\n    padding: 18px 68px 24px 20px;\n  }\n  @include media(\"<=420px\") {\n    display: none;\n  }\n}\n",".hero {\n  overflow: hidden;\n}\n\n.hero-inner {\n  display: flex;\n  justify-content: space-between;\n  padding: 110px 0 192px;\n\n  @include media(\"<=1024px\") {\n    padding-top: 20px;\n  }\n  @include media(\"<=tablet\") {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 0;\n  }\n}\n\n.hero-content {\n  max-width: 553px;\n  flex: 1 0 100%;\n  padding-top: 156px;\n  @include media(\"<=1024px\") {\n    max-width: 500px;\n    padding-top: 130px;\n  }\n  @include media(\"<=tablet\") {\n    flex: 0 1 100%;\n    text-align: center;\n    padding-top: 60px;\n  }\n  @include media(\"<=420px\") {\n    padding-top: 0;\n  }\n}\n\n.hero-title {\n  font-size: 73px;\n  font-weight: 500;\n  margin-bottom: 44px;\n  @include media(\"<=1024px\") {\n    font-size: 60px;\n  }\n  @include media(\"<=tablet\") {\n    margin-bottom: 30px;\n  }\n  @include media(\"<=420px\") {\n    font-size: 46px;\n    margin-bottom: 15px;\n  }\n  @include media(\"<=375px\") {\n    font-size: 42px;\n  }\n  @include media(\"<=320px\") {\n    font-size: 40px;\n  }\n}\n\n.hero-subtitle {\n  font-size: 18px;\n  color: #6e757a;\n  margin-bottom: 72px;\n  line-height: 1.1;\n\n  @include media(\"<=1024px\") {\n    margin-bottom: 70px;\n  }\n  @include media(\"<=tablet\") {\n    margin-bottom: 15px;\n  }\n  @include media(\"<=420px\") {\n    padding-left: 0;\n    text-align: center;\n    font-size: 16px;\n    margin-bottom: 0;\n  }\n}\n\n.hero-buttons {\n  @include media(\"<=tablet\") {\n    position: relative;\n    top: 640px;\n  }\n  @include media(\"<=420px\") {\n    top: 380px;\n    padding: 0 20px;\n  }\n  @include media(\"<=320px\") {\n    padding: 0;\n  }\n}\n\n.hero-more {\n  color: #fff;\n  text-decoration: none;\n  box-shadow: 0 5px 10px rgba(255, 57, 70, 0.15);\n  background-color: #ff3946;\n  padding: 21px 34px;\n  border-radius: 30px;\n  font-weight: 500;\n  transition: all 0.3s linear;\n  margin-right: 39px;\n  &:hover {\n    box-shadow: 0 5px 20px rgba(255, 57, 70, 0.65);\n  }\n  @include media(\"<=420px\") {\n    margin-right: 7px;\n  }\n  @include media(\"<=320px\") {\n    padding: 16px 24px;\n  }\n}\n\n.hero-contact {\n  font-weight: 500;\n  text-decoration: none;\n  color: #314584;\n  transition: all 0.3s linear;\n  &:hover {\n    color: #ff3946;\n  }\n}\n\n.hero-img {\n  position: relative;\n  max-width: 680px;\n  left: 17%;\n  flex: 0 1 100%;\n\n  @include media(\"<=1280px\") {\n    left: 10%;\n  }\n  @include media(\"<=1024px\") {\n    left: 2%;\n    max-width: 560px;\n  }\n  @include media(\"<=tablet\") {\n    padding-top: 0;\n    right: 0;\n  }\n  @include media(\"<=420px\") {\n    max-width: 320px;\n  }\n  @include media(\"<=320px\") {\n    max-width: 280px;\n  }\n  &__mob {\n    display: none;\n    @include media(\"<=420px\") {\n      display: block;\n    }\n  }\n  img {\n    @include media(\"<=1024px\") {\n      width: 100%;\n    }\n  }\n}\n\n.slider {\n  @include media(\"<=420px\") {\n    display: none;\n  }\n}\n\n.slick-list {\n  overflow: hidden;\n}\n\n.slick-track {\n  display: flex;\n}\n\n.slick-arrow {\n  display: none !important;\n}\n",".portfolio {\n  padding-bottom: 302px;\n  @include media(\"<=tablet\") {\n    padding-bottom: 120px;\n  }\n}\n\n.portfolio-inner {\n  padding: 88px 0 56px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  @include media(\"<=tablet\") {\n    padding: 50px 0 20px;\n  }\n  @include media(\"<=420px\") {\n    flex-direction: column;\n    align-items: center;\n  }\n}\n\n.portfolio-item {\n  max-width: 371px;\n  margin-bottom: 31px;\n  flex: 0 1 32%;\n  @include media(\"<=420px\") {\n    flex: 0 1 100%;\n    max-width: 340px;\n    margin-bottom: 20px;\n  }\n\n  img {\n    width: 100%;\n  }\n}\n\n.portfolio-link {\n  display: block;\n  text-align: center;\n  text-decoration: none;\n  color: #ff3946;\n  &:hover {\n    text-decoration: underline;\n  }\n}\n",".footer {\n  padding: 70px 0 53px;\n  background-color: #314584;\n  text-align: center;\n  @include media(\"<=420px\") {\n    padding: 50px 0 33px;\n  }\n}\n\n.footer-inner {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.footer-suptitle {\n  color: #fff;\n  font-weight: 500;\n  margin-bottom: 27px;\n}\n\n.footer-title {\n  text-transform: uppercase;\n  color: #ff3946;\n  font-size: 48px;\n  font-weight: 500;\n  margin-bottom: 47px;\n  @include media(\"<=420px\") {\n    font-size: 38px;\n    margin-bottom: 30px;\n  }\n}\n\n.footer-links {\n  text-align: center;\n  margin-bottom: 58px;\n  font-size: 18px;\n  width: 100%;\n  max-width: 550px;\n  display: flex;\n  justify-content: space-between;\n  @include media(\"<=420px\") {\n    margin-bottom: 15px;\n    flex-wrap: wrap;\n    padding: 0 40px;\n  }\n  a {\n    font-size: 18px;\n    text-decoration: none;\n    color: #fff;\n    transition: all 0.3s linear;\n    &:hover {\n      text-decoration: underline;\n    }\n    @include media(\"<=420px\") {\n      font-size: 16px;\n      display: block;\n      margin-bottom: 15px;\n    }\n  }\n}\n\n.copyright {\n  font-size: 16px;\n  color: #fff;\n  margin-bottom: 39px;\n  @include media(\"<=420px\") {\n    font-size: 14px;\n  }\n}\n\n.footer-media {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 255px;\n  align-items: center;\n  @include media(\"<=420px\") {\n    max-width: 200px;\n  }\n  a {\n    color: #fff;\n    font-size: 34px;\n    transition: all 0.3s linear;\n    &:hover {\n      color: #ff3946;\n    }\n  }\n}\n",".contact-inner {\n  padding: 56px 0 60px;\n}\n\n.section-suptitle {\n  color: #ff3946;\n  font-weight: 500;\n  margin-bottom: 31px;\n}\n\n.contact-form {\n  display: flex;\n  flex-direction: column;\n}\n\n.contact-input {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 36px;\n  @include media(\"<=tablet\") {\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 10px;\n  }\n}\n\ninput {\n  display: inline;\n  background-color: #f4fafe;\n  width: 100%;\n  max-width: 571px;\n  height: 61px;\n  border: none;\n  padding: 20px 0 28px 21px;\n  color: #314584;\n  font-size: 18px;\n  font-weight: 500;\n  font-family: \"Work Sans\", sans-serif;\n  @include media(\"<=1024px\") {\n    max-width: 480px;\n  }\n  @include media(\"<=tablet\") {\n    margin-bottom: 25px;\n  }\n}\n\ntextarea {\n  background-color: #f4fafe;\n  width: 100%;\n  color: #314584;\n  font-size: 18px;\n  font-weight: 500;\n  border: none;\n  padding: 22px 0 0 21px;\n  font-family: \"Work Sans\", sans-serif;\n  margin-bottom: 65px;\n  @include media(\"<=tablet\") {\n    max-width: 480px;\n    margin: 0 auto 50px;\n  }\n}\n\n.contact-button {\n  box-shadow: 0 5px 10px rgba(255, 57, 70, 0.15);\n  background-color: #ff3946;\n  color: #fff;\n  padding: 20px 36px;\n  border-radius: 30px;\n  font-weight: 500;\n  transition: all 0.3s linear;\n  border: none;\n  max-width: 201px;\n  margin: 0 auto;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0 5px 20px rgba(255, 57, 70, 0.65);\n  }\n}\n"]}